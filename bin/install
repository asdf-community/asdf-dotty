#!/usr/bin/env bash

install_dotty() {
  local install_type=$1
  local version=$2
  local install_path=$3

  if [ "$install_type" != "version" ]; then
    echo "ERROR: this plugin can only install dotty releases"
    exit 1
  fi

  if [ "$TMPDIR" = "" ]; then
    local tmp_download_dir
    tmp_download_dir=$(mktemp -d -t dotty_build_XXXXXX)
  else
    local tmp_download_dir=$TMPDIR
  fi

  # path to the tar file
  local source_path
  source_path=$(get_download_file_path "$install_type" "$version" "$tmp_download_dir")
  download_source_file "$install_type" "$version" "$source_path"

  tar zxf "$source_path" -C "$install_path" --strip-components=1
}

download_source_file() {
  local install_type=$1
  local version=$2
  local download_path=$3
  local download_url
  download_url=$(get_download_url "$install_type" "$version")

  curl -vLo "$download_path" "$download_url"
}

get_download_file_path() {
  local install_type=$1
  local version=$2
  local tmp_download_dir=$3
  local name
  name="$(release_name "$version")"

  local pkg_name="${name}-${install_type}-${version}.tar.gz"

  echo "$tmp_download_dir/$pkg_name"
}

release_name() {
  local version=$2
  case "$version" in
    "0.*")
      echo "dotty"
      ;;
    *)
      echo "scala3"
      ;;
  esac
}

get_download_url() {
  local install_type=$1
  local version=$2
  local name
  name="$(release_name "$version")"

  echo "https://github.com/lampepfl/dotty/releases/download/${version}/${name}-${version}.tar.gz"
}

install_dotty "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
